# prompt

### battery status
_BATTERY_STATUS=''

# battery status prompt
function _battery_status {
local _CHARGE=$1 _INDICATOR _STATE=$2 _TIME=$3
[[ ${_CHARGE} -gt  0 ]] && _COLOR="%F{red}"    # critical
[[ ${_CHARGE} -gt 20 ]] && _COLOR="%F{yellow}" # warning
[[ ${_CHARGE} -gt 40 ]] && _COLOR="%F{green}"  # ok
[ "${_STATE}" = "charging;" ] && _COLOR="%F{cyan}" # charging
for ((i=0; i<_CHARGE/20; i++)); do _INDICATOR+='❚'; done # for every 20%
[[ $((_CHARGE%20)) -ge 10 ]] && _INDICATOR+='❙' # for 10%-20% (after mod 20)
for ((i=${#_INDICATOR}; i<5; i++)); do _INDICATOR+=' '; done # fill
_BATTERY_STATUS="${_COLOR}${_TIME}⦗${_INDICATOR}⦘%f " # create prompt indicator
}

# architectures
function _unix_battery_status {
_BATTERY_STATUS=''
local _SYS='/sys/class/power_supply/BAT1/'
local _STATUS=`cat $_SYS/status` _TIME
[[ ! $_STATUS =~ (Disc|C)harging ]] && return
_TIME=$((`cat $_SYS/energy_now`*60/`cat $_SYS/power_now`))
_battery_status `cat $_SYS/capacity` $_STATUS $_TIME "`printf "%d:%.2d" $((_TIME/60)) $((_TIME%60))`"
}

function _osx_battery_status {
_BATTERY_STATUS=''
local -a _STATUS
_STATUS=(`pmset -g batt | tail -n +2`) # get info from pmset
[[ "${_STATUS[3]}" =~ .*charging.* ]] || return # only continue when (dis-)charging
_battery_status ${_STATUS[2]/\%;} ${_STATUS[3]} ${_STATUS[4]/\(no}
}

# update periodically
[ -d /sys/class/power_supply/BAT1 ] && periodic_functions+=(_unix_battery_status) # (=> unix/linux)
hash pmset 2> /dev/null && periodic_functions+=(_osx_battery_status) # (=> apple/OSX)



### git status
if autoload -Uz vcs_info; then
	#zstyle ':vcs_info:*+*:*' debug true
	zstyle ":vcs_info:*" enable git
	zstyle ":vcs_info:(git*):*" check-for-changes true

	local _info="%c%u%m %F{cyan}%b:%r"
	zstyle ":vcs_info:*" stagedstr "%F{green}#"
	zstyle ":vcs_info:*" unstagedstr "%F{yellow}#"
	zstyle ":vcs_info:git*" formats "$_info "
	zstyle ":vcs_info:git*" actionformats "$_info%F{red}[%a] "
	zstyle ':vcs_info:git*+set-message:*' hooks git-misc

	function +vi-git-misc() {
		local _TMP _MISC
		_TMP=$(git status -s -b)
		[[ $_TMP =~ \\?\\? ]] && _MISC+="%F{red}#"
		[[ $_TMP =~ ahead ]] && _MISC+="%F{green}@${${_TMP/*ahead }/[,\]]*}"
		[[ $_TMP =~ behind ]] && _MISC+="%F{red}@${${_TMP/*behind }/\]*}"
		[[ -s "${hook_com[base]}/.git/refs/stash" ]] && hook_com[misc]+="%F{magenta}%}±"
		hook_com[misc]+="$_MISC"
	}

	function precmd() {
		vcs_info
	}
fi

### prompts
PROMPT=''
[ -n "$SSH_TTY" ] && PROMPT+='%F{red}%m ' # host if not local
PROMPT+='%F{green}%.' # pwd
PROMPT+='%(?..%F{red}%B[%?]%b)' # return code
PROMPT+='%F{yellow}%#%(2L.%B+%b.)' # shell status
PROMPT+='%(1j.%F{yellow}[%j].)' # background jobs
PROMPT+=' %f' # reset colors

RPROMPT='${vcs_info_msg_0_} ' # git status
RPROMPT+='$_BATTERY_STATUS%F{cyan}%T%f' # battery status and time
LISTPROMPT=''
SPROMPT="%F{yellow}%R %F{white}%b-> %F{green}%r %F{white}%b? [aeNy]%f "
