import XMonad
import XMonad.Config.Desktop (desktopLayoutModifiers)
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Hooks.SetWMName
import XMonad.Layout.Grid
import XMonad.Layout.NoBorders
import XMonad.Layout.ThreeColumns
import XMonad.Util.EZConfig (additionalKeys)
import XMonad.Util.Run (spawnPipe)
import Graphics.X11.ExtraTypes.XF86
import System.Exit
import System.IO

import qualified XMonad.StackSet as W
import qualified Data.Map        as M

spaces = ["M","T","W","C"]
dvorak_command = "setxkbmap -layout us; sleep 0.1; setxkbmap -model pc104 -layout us,us,de -variant dvp,,nodeadkeys -option lv3:ralt_switch"
xlock_command = "gnome-screensaver-command --lock; xset +dpms dpms 1800 1800 1800"
osd_cat_command = "osd_cat --pos=top --offset=2 --align=center --font='-misc-fixed-*-*-*-*-10-*-*-*-c-*-*-*' --colour=green --shadow=5 "
osd_cat_bar_command = "pkill -u $USER osd_cat;" ++ osd_cat_command ++ "--barmode=percentage --percentage="

main = do
    xmobar <- spawnPipe "xmobar -x 0 ~/.xmonad/xmobar.hs"
    xmonad $ docks defaultConfig
        {
            terminal = "/usr/bin/gnome-terminal",
            modMask = mod4Mask,
            borderWidth = 1,
            normalBorderColor = "#002200",
            focusedBorderColor = "#007700",
            workspaces = spaces,
            layoutHook = smartBorders $ avoidStruts (Full ||| Tall 1 (1/100) (1/2) ||| ThreeColMid 1 (1/100) (1/2) ||| GridRatio (3/2)),
            manageHook = composeAll
                [ manageHook defaultConfig
                , className =? "Blender" --> doFloat
                , className =? "Gimp" --> doFloat
                , className =? "Gnome-control-center" --> doFloat
                , className =? "firefox" --> doShift "W"
                , (className =? "firefox" <&&> appName =? "Toolkit" ) --> doFloat
                , className =? "MPlayer" --> doFloat
                , className =? "Microsoft Teams - Preview" --> doShift "T"
                , (className =? "Microsoft Teams - Preview" <&&> stringProperty "WM_NAME" =? "Microsoft Teams Notification") --> doFloat
                , className =? "VirtualBox" --> doFloat
                , className =? "Wfica" --> doShift "C"
                , resource  =? "desktop_window" --> doIgnore ]
                <+> manageDocks,
            logHook = dynamicLogWithPP $ xmobarPP
                {
                    ppOutput = hPutStrLn xmobar
                    , ppSep = "•"
                    , ppWsSep = ""
                    , ppLayout = (\l -> case l of {"Full"->"█"; "Tall"->"│"; "ThreeCol"->"║"; "GridRatio 1.5"->"╫"; _->l})
                    , ppOrder = \(ws:l:t:_) -> [l,ws,t]
                    , ppTitle = xmobarColor "green" "" . shorten 50
                },
            startupHook = do
                setWMName "LG3D"
                spawn "[ -f ~/.xmonad/background.png ] && display -window root ~/.xmonad/background.png" -- requires ImageMagick
                spawn "unity-settings-daemon"
                spawn "gnome-screensaver"
                spawn ("xautolock -time 31 -locker '" ++ xlock_command ++ "'")
                spawn "sleep 1; xset +dpms dpms 1800 1800 1800"
                spawn dvorak_command
                spawn "xmodmap -e \"pointer = 3 2 1\""
                spawn "rxandr | grep -q 'DVI-I-2-1 connected' && { xrandr --output DVI-I-3-2 --primary --auto --left-of eDP-1-1; xrandr --output DVI-I-2-1 --noprimary --auto --right-of DVI-I-3-2 ; xrandr --output eDP-1-1 --noprimary --right-of DVI-I-2-1; } || { xrandr --output DVI-I-2-1 --off --output DVI-I-3-2 --off; }"
                spawn "xrandr | grep -q 'DP-1.3 connected' && { xrandr --output DP-1.3 --primary --auto --left-of eDP-1-1; } || { xrandr --output eDP-1-1 --noprimary --pos 0x0; xrandr --output DP-1.3 --off; }"
        }
        `additionalKeys`
        [((m .|. mod4Mask, k), windows $ f i)
            | (i, k) <- zip (spaces) [xK_ampersand, xK_bracketleft, xK_braceleft, xK_braceright]
            , (f, m) <- [(W.greedyView, 0), (W.shift, shiftMask)]]
        `additionalKeys`
        [((m .|. mod4Mask, k), screenWorkspace s >>= flip whenJust (windows . f))
            | (k, s) <- zip [xK_w, xK_e, xK_r] [0,1,2]
            , (f, m) <- [(W.view, 0), (W.shift, shiftMask)]]
        `additionalKeys` [
            ((mod4Mask               , xK_p        ), spawn "PATH=\"$HOME/local/bin:$PATH\" dmenu_run"  ),
            ((mod4Mask               , xK_q        ), spawn "xmonad --recompile && xmonad --restart&"),
            ((mod4Mask.|.shiftMask   , xK_q        ), io (exitWith ExitSuccess)),
            ((mod4Mask               , xK_Escape   ), spawn "display ~/.xmonad/Xmbindings.svg &"),
            ((mod4Mask.|.shiftMask   , xK_Escape   ), spawn "setxkbmap -query | awk '/layout/ { layout=$2; } /variant/ { variant=$2; } END { system(sprintf(\"gkbd-keyboard-display -l  \\\"%s %s\\\"\",layout, variant)); }'"),
            ((mod4Mask.|.shiftMask   , xK_a        ), spawn "gnome-screenshot --area &"),
            ((mod4Mask.|.shiftMask   , xK_l        ), spawn xlock_command),
            ((mod4Mask.|.shiftMask   , xK_s        ), spawn "gnome-screenshot --window"),
            ((mod4Mask.|.shiftMask   , xF86XK_Eject), spawn "systemctl suspend"),
            ((controlMask.|.shiftMask, xF86XK_Eject), spawn xlock_command),
            ((controlMask.|.shiftMask, xK_l        ), spawn ("if [ ! \"`setxkbmap -query | grep -o dvp`\" = \"dvp\" ]; then " ++ dvorak_command ++ "; else setxkbmap -layout us_intl -option grp:shifts_toggle; fi; xmodmap ~/.Xmodmap &"))]
        `additionalKeys` [
            ((0, xF86XK_AudioMute        ), spawn ("pkill -u $USER osd_cat; amixer -D pulse set Master toggle | awk '/Front Right:/ { print $6; }' | " ++ osd_cat_command )),
            ((0, xF86XK_AudioLowerVolume ), spawn ("amixer -D pulse -q set Master 2%-; " ++ osd_cat_bar_command ++ "`amixer -D pulse get Master | awk '/Front Right:/ { print $5;}' | tr -d '[]'`")),
            ((0, xF86XK_AudioRaiseVolume ), spawn ("amixer -D pulse -q set Master 2%+; " ++ osd_cat_bar_command ++ "`amixer -D pulse get Master | awk '/Front Right:/ { print $5;}' | tr -d '[]'`")),
            ((0, xF86XK_AudioMicMute     ), spawn "amixer -D pulse -q set Capture toggle"),
            ((0, xF86XK_MonBrightnessDown), spawn ("xbacklight -5; " ++ osd_cat_bar_command ++ "`xbacklight`")),
            ((0, xF86XK_MonBrightnessUp  ), spawn ("xbacklight +5; " ++ osd_cat_bar_command ++ "`xbacklight`")),
            ((0, xF86XK_Display          ), spawn ""),
            ((0, xF86XK_WLAN             ), spawn "STATE=\"un`rfkill -no soft list wlan`\"; rkill ${STATE#unun} wlan"),
            ((0, xF86XK_Tools            ), spawn "env XDG_CURRENT_DESKTOP=GNOME gnome-control-center"),
            ((0, xF86XK_Bluetooth        ), spawn "STATE=\"un`rfkill -no soft list bluetooth`\"; rkill ${STATE#unun} bluetooth")]
